/** $Header: /cvsroot/gpvn/prolog/pv5.df5,v 1.2 2001/09/12 04:41:33 oommoo Exp $
 *
 * PROGRAM:  Epistemic system with five values,
 *           PV5.df5 
 * DATE...:  9.18.87
 * UPDATED:  91.4.15
 * AUTHORS:  CVBII & PBMVIII
 * PURPOSE:  A five valued semantics.
 * NOTES..:  To be loaded under PVN.exe
 */

/* These clauses define the operators that are valid for this logic.  */
define(>,imp).
define(@,mat_imp).
define(&,conj).
define(v,dis).
define(^,neg).


/* These are the polarities that are run under this logic.   */

polarity(t).
polarity(f).
polarity(u).
polarity(m).
polarity(i).

/* These are:
   True, False, Undecided, Meaningless, and inconceivable.
/*=====================================================================*
 *--------------------  Interpretation clauses  -----------------------*
 *=====================================================================*
 *------------------------  implication  ------------------------------*
 *
 *  The symbol for implication is 'imp(Antecedant,Concequent)'
 *  The semantic interpretation for implication is given by the
 *  following matrix where the rows are for the antecedant and
 *  the columns are for the consequent
 *
 *             >      t f u m i
 *                 +-------------
 *               t |  t f u u i
 *               f |  t t t t i
 *               u |  t u t m i
 *               m |  t u m t i
 *               i |  i i i i t
 *                 |
 *------------------------  implication  ------------------------------*
 *
 *  The preceding matrix can be represented with the following table   *
 *  where the table predicate has the following format                 *
 *     define(Operator,Result,Operand_one,Operand_two)                 */


/* row 1 */
define(imp,t,t,t).
define(imp,f,t,f).
define(imp,u,t,u).
define(imp,u,t,m).
define(imp,i,t,i).

/* row 2 */
define(imp,t,f,t).
define(imp,t,f,f).
define(imp,t,f,u).
define(imp,t,f,m).
define(imp,i,f,i).

/* row 3 */
define(imp,t,u,t).
define(imp,u,u,f).
define(imp,t,u,u).
define(imp,m,u,m).
define(imp,i,u,i).

/* row 4 */
define(imp,t,m,t).
define(imp,u,m,f).
define(imp,m,m,u).
define(imp,t,m,m).
define(imp,i,m,i).

/* row 5 */
define(imp,i,i,t).
define(imp,i,i,f).
define(imp,i,i,u).
define(imp,i,i,m).
define(imp,t,i,i).


/*------------------- material  implication  ----------------------*
 *
 *  The symbol for implication is 'mat_imp(Antecedant,Concequent)'
 *  The semantic interpretation for implication is given by the
 *  following matrix where the rows are for the antecedant and
 *  the columns are for the consequent
 *
 *                    t f
 *                 +------
 *               t |  t f
 *               f |  t t
 *
 *---------------------------------------------------------------------*
 *
 *  The preceding matrix can be represented with the following table   *
 *  where the table predicate has the following format                 *
 *     define(Operator,Result,Operand_one,Operand_two)                 */


/* row 1 */
define(mat_imp,t,t,t).
define(mat_imp,f,t,f).

/* row 2 */
define(mat_imp,t,f,t).
define(mat_imp,t,f,f).

/* -----------------------  conjunction  -------------------------------*
 *
 *    The symbol for conjunction is 'and(First_conjunct,Second_conjunct)'
 *
 *             &      t f u m i
 *                  +-----------
 *               t  | t f u u i
 *               f  | f f f f f
 *               u  | u f u m i
 *               m  | u f m m i
 *               i  | i f i i i
 *
 * -----------------------  conjunction  -------------------------------*
 *
 *  The preceding matrix can be represented with the following table    *
 *  where the table predicate has the following format                  *
 *     define(Operator,Result,Operand_one,Operand_two)                   *
 *                                                                      */

/* row 1 */
define(conj,t,t,t).
define(conj,f,t,f).
define(conj,u,t,u).
define(conj,u,t,m).
define(conj,i,t,i).


/* row 2 */
define(conj,f,f,t).
define(conj,f,f,f).
define(conj,f,f,u).
define(conj,f,f,m).
define(conj,i,f,i).

/* row 3 */
define(conj,u,u,t).
define(conj,f,u,f).
define(conj,u,u,u).
define(conj,m,u,m).
define(conj,i,u,i).

/* row 4 */
define(conj,u,m,t).
define(conj,f,m,f).
define(conj,m,m,u).
define(conj,m,m,m).
define(conj,i,m,i).

/* row 5 */
define(conj,i,i,t).
define(conj,f,i,f).
define(conj,i,i,u).
define(conj,i,i,m).
define(conj,i,i,i).


/* -----------------  disjunction  --------------------------------*
 *
 *     The symbol for disjunction is 'dis(First_disjunct,Second_disjunct)'
 *
 *              v     t f u m i
 *                  +-----------
 *               t  | t t t t t 
 *               f  | t f u u f
 *               u  | t u u m u 
 *               m  | t u m m m
 *               i  | t f u m i
 * -----------------  disjunction  --------------------------------*
 *
 *  The preceding matrix can be represented with the following table    *
 *  where the table predicate has the following format                  *
 *     define(Operator,Result,Operand_one,Operand_two)                   *
 *                                                                      */

/* row 1 */
define(dis,t,t,t).
define(dis,t,t,f).
define(dis,t,t,u).
define(dis,t,t,m).
define(dis,t,t,i).

/* row 2 */
define(dis,t,f,t).
define(dis,f,f,f).
define(dis,u,f,u).
define(dis,u,f,m).
define(dis,f,f,i).

/* row 3 */
define(dis,t,u,t).
define(dis,u,u,f).
define(dis,u,u,u).
define(dis,m,u,m).
define(dis,u,u,i).

/* row 4 */
define(dis,t,m,t).
define(dis,u,m,f).
define(dis,m,m,u).
define(dis,m,m,m).
define(dis,m,m,i).


/* row 5 */
define(dis,t,i,t).
define(dis,f,i,f).
define(dis,u,i,u).
define(dis,m,i,m).
define(dis,i,i,i).


/* ------------------  negation  ---------------------------------*
 *
 *      The symbol for negation is 'neg(Formula)'.
 *                  +--
 *               t  | f
 *               f  | t
 *               u  | u
 *               m  | m
 *               i  | i
 *
 *           'iv(expression,value)' stands for the interpretation
 *           function of a well formed formula
 *
 *
 * ------------------  negation  ---------------------------------*
 *
 *  The preceding matrix can be represented with the following table   *
 *  where the table predicate has the following format                 *
 *     define(Operator,Result,Operand)                                 *
 *                                                                     */ 

define(neg,t,f).
define(neg,f,t).
define(neg,u,u).
define(neg,m,m).
define(neg,i,i).

/*====================================*/
/* defines in matrix form for display */
/*====================================*/
define_matrix('        ษอออออออออออัอออออออออออัอออออออออออัอออออป').
define_matrix('        บ t f u m i | t f u m i | t f u m i | t f บ').
define_matrix('    ษอออฮอออออออออออุอออออออออออุอออออออออออุอออออน').
define_matrix('    บ ^ บ     &     |     v     |     >     |  @  บ').
define_matrix('ษอออฮอออฮอออออออออออุอออออออออออุอออออออออออุอออออน').
define_matrix('บ t บ f บ t f u u i | t t t t t | t f u u i | t f บ').
define_matrix('บ f บ t บ f f f f f | t f u u f | t t t t i | t t บ').
define_matrix('บ u บ u บ u f u m i | t u u m u | t u t m i |     บ').
define_matrix('บ m บ m บ u f m m i | t u m m m | t u m t i |     บ').
define_matrix('บ i บ i บ i f i i i | t f u m i | i i i i t |     บ').
define_matrix('ศอออสอออสอออออออออออฯอออออออออออฯอออออออออออฯอออออผ').

/*
 * $Log: pv5.df5,v $
 * Revision 1.2  2001/09/12 04:41:33  oommoo
 * RCS decorations to capture version information.
 *
 */
