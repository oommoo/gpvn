/** $Header: /cvsroot/gpvn/prolog/b3.df3,v 1.2 2001/09/12 04:41:33 oommoo Exp $
 *
 * PROGRAM:  Bochvar (B3) definition file
 * DATE...:  90.9.3
 * UPDATED:  90.9.3
 * AUTHORS:  CVBII & PBMVIII
 * PURPOSE:  Bochvar's three valued semantics
 * NOTES..:  to be loaded under PV4.exe :
 */

/* These clauses define the operators that are valid for this logic.  */
define(>,imp).
define(@,mat_imp).
define(&,conj).
define(v,dis).
define(^,neg).

/* These are the polarities that are run under this logic.   */

polarity(t).
polarity(f).
polarity(m).

/*=====================================================================*
 *--------------------  Interpretation clauses  -----------------------*
 *=====================================================================*

 *------------------------  implication  ------------------------------*
 *
 *  The symbol for implication is 'imp(Antecedant,Concequent)'
 *  The semantic interpretation for implication is given by the
 *  following matrix where the rows are for the antecedant and
 *  the columns are for the consequent
 *
 *                    t f m
 *                 ฺฤฤฤฤฤฤฤฤฤ
 *               t ณ  t f m
 *               f ณ  t t m
 *               m ณ  m m m
 *                 ณ 
 *
 *------------------------  implication  ------------------------------*
 *
 *  The preceding matrix can be represented with the following table   *
 *  where the table predicate has the following format                 *
 *     define(Operator,Result,Operand_one,Operand_two)                 */


/* row 1 */
define(imp,t,t,t).
define(imp,f,t,f).
define(imp,m,t,m).


/* row 2 */
define(imp,t,f,t).
define(imp,t,f,f).
define(imp,m,f,m).


/* row 3 */
define(imp,m,m,t).
define(imp,m,m,f).
define(imp,m,m,m).


/*------------------- material  implication  ----------------------*
 *
 *  The symbol for implication is 'mat_imp(Antecedant,Concequent)'
 *  The semantic interpretation for implication is given by the
 *  following matrix where the rows are for the antecedant and
 *  the columns are for the consequent
 *
 *                    t f
 *                 ฺฤฤฤฤฤฤ
 *               t ณ  t f
 *               f ณ  t t
 *
 *---------------------------------------------------------------------*
 *
 *  The preceding matrix can be represented with the following table   *
 *  where the table predicate has the following format                 *
 *     define(Operator,Result,Operand_one,Operand_two)                 */


/* row 1 */
define(mat_imp,t,t,t).
define(mat_imp,f,t,f).

/* row 2 */
define(mat_imp,t,f,t).
define(mat_imp,t,f,f).

/* -----------------------  conjunction  -------------------------------*
 *
 *    The symbol for conjunction is 'and(First_conjunct,Second_conjunct)'
 *
 *                    t f m  
 *                  ฺฤฤฤฤฤฤฤฤฤ
 *               t  ณ t f m 
 *               f  ณ f f m 
 *               m  ณ m m m 
 *                  ณ 
 *
 * -----------------------  conjunction  -------------------------------*
 *
 *  The preceding matrix can be represented with the following table    *
 *  where the table predicate has the following format                  *
 *     define(Operator,Result,Operand_one,Operand_two)                   *
 *                                                                      */

/* row 1 */
define(conj,t,t,t).
define(conj,f,t,f).
define(conj,m,t,m).


/* row 2 */
define(conj,f,f,t).
define(conj,f,f,f).
define(conj,m,f,m).



/* row 3 */
define(conj,m,m,t).
define(conj,m,m,f).
define(conj,m,m,m).



/* -----------------  disjunction  --------------------------------*
 *
 *     The symbol for disjunction is 'dis(First_disjunct,Second_disjunct)'
 *
 *                    t f m 
 *                  ฺฤฤฤฤฤฤฤฤฤ
 *               t  ณ t t m 
 *               f  ณ t f m 
 *               m  ณ m m m 
 *                  ณ 
 *
 * -----------------  disjunction  --------------------------------*
 *
 *  The preceding matrix can be represented with the following table    *
 *  where the table predicate has the following format                  *
 *     define(Operator,Result,Operand_one,Operand_two)                   *
 *                                                                      */

/* row 1 */
define(dis,t,t,t).
define(dis,t,t,f).
define(dis,m,t,m).

/* row 2 */
define(dis,t,f,t).
define(dis,f,f,f).
define(dis,m,f,m).

/* row 3 */
define(dis,m,m,t).
define(dis,m,m,f).
define(dis,m,m,m).


/* ------------------  negation  ---------------------------------*
 *
 *      The symbol for negation is 'neg(Formula)'.
 *                  ฺฤฤ
 *               t  ณ f
 *               f  ณ t
 *               m  ณ m
 *                  ณ 
 *
 *           'iv(expression,value)' stands for the interpretation
 *           function of a well formed formula
 *
 *
 * ------------------  negation  ---------------------------------*
 *
 *  The preceding matrix can be represented with the following table    *
 *  where the table predicate has the following format                  *
 *     define(Operator,Result,Operand)                                   *
 *                                                                      */

define(neg,t,f).
define(neg,f,t).
define(neg,m,m).


/*====================================*/
/* defines in matrix form for display */
/*====================================*/
define_matrix('        ษอออออออัอออออออัอออออออัอออออป').
define_matrix('        บ t f m ณ t f m ณ t f m ณ t f บ').
define_matrix('    ษอออฮอออออออุอออออออุอออออออุอออออน').
define_matrix('    บ ^ บ    &  ณ    v  ณ    >  ณ  @  บ').
define_matrix('ษอออฮอออฮอออออออุอออออออุอออออออุอออออน').
define_matrix('บ t บ f บ t f m ณ t t m ณ t f m ณ t f บ').
define_matrix('บ f บ t บ f f m ณ t f m ณ t t m ณ t t บ').
define_matrix('บ m บ m บ m m m ณ m m m ณ m m m ณ     บ').
define_matrix('ศอออสอออสอออออออฯอออออออฯอออออออฯอออออผ').

/*
 * $Log: b3.df3,v $
 * Revision 1.2  2001/09/12 04:41:33  oommoo
 * RCS decorations to capture version information.
 *
 */
